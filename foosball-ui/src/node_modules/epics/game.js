import { Subject } from "rxjs";
import { mergeMap, filter } from "rxjs/operators";

/**
 * updateXEpic, updateYEpic
 */

export const updateXEpic = action$ =>
  action$.pipe(
    filter(action => action.type === "GAME_CONTROL_X_UPDATE"),

    mergeMap(action => {
      const subject = new Subject();
      console.log('Call GAME_CONTROL_X_UPDATE', action);

      // window.babylon.scene.getMeshByName("baseBoard").rotate (BABYLON.Axis.X, Math.PI * (-30/360), BABYLON.Space.WORLD)
      
      // window.babylon.scene.getMeshByName("baseBoard").rotation

      return subject;
    })
  );

export const updateYEpic = action$ =>
  action$.pipe(
    filter(action => action.type === "GAME_CONTROL_Y_UPDATE"),

    mergeMap(action => {
      const subject = new Subject();
      console.log('Call GAME_CONTROL_Y_UPDATE', action);
      let handleId;
      if (action.gameControl === "leftControl") {
        handleId = "handle1";
      } else {
        handleId = "handle2";
      }

      const scene = window.babylon.scene;
      const handle = scene.getMeshByName(handleId);
      handle.position.z = 0.6 + action.newY / 100;
      console.log("??", handle.position.z);
      return subject;
    })
  );
