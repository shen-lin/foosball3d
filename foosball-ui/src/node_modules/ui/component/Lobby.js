import React, { Component } from "react";
import "./Lobby.css";
import { connect } from "react-redux";
import Avatar from "@material-ui/core/Avatar";
import Badge from "@material-ui/core/Badge";
import TextField from "@material-ui/core/TextField";
import FormControlLabel from "@material-ui/core/FormControlLabel";
import Switch from "@material-ui/core/Switch";
import Button from "@material-ui/core/Button";
import MsgIcon from "@material-ui/icons/Message";
import BackspaceIcon from "@material-ui/icons/ArrowBack";
import IconButton from "@material-ui/core/IconButton";
import InputAdornment from "@material-ui/core/InputAdornment";
import Divider from "@material-ui/core/Divider";
import Icon from "@material-ui/core/Icon";
class Lobby extends Component {
  constructor(props) {
    super(props);
  }

  checkPlayer(position) {
    console.log("Check player info", position);
  }

  render() {
    return (
      <div className="lobby">
        <div className="lobby-main">
          <div className="lobby-main-left">
            <div className="lobby-main-left-position">
              {this.props.gamestate.players.map((player, index) => (
                <div
                  className={"lobby-pos lobby-pos-" + index}
                  onClick={this.checkPlayer.bind(this, index)}
                  key={player.client_session_id}
                >
                  <Badge
                    {...{
                      ...(this.props.gamestate.roominfo.creator.client_session_id === player.client_session_id && { badgeContent: "H" }),
                      color: "primary"
                    }}
                  >
                    <Avatar
                      className="lobby-avatar"
                      src={
                        "http://graph.facebook.com/" +
                        player.fb_client_id +
                        "/picture"
                      }
                    />
                  </Badge>
                </div>
              ))}
            </div>
          </div>

          <div className="lobby-main-right">
            <div className="lobby-main-right-messages-ctn">
              <div className="lobby-main-right-messages-list">
                <div className="lobby-main-right-message">
                  [Shen Lin] Hello guys
                </div>
                <div className="lobby-main-right-message">[Shen Lin] glhf</div>
              </div>
            </div>
            <Divider />
            <div className="lobby-main-right-send">
              <div>
                <TextField
                  id="input-with-icon-grid"
                  label="Chat"
                  InputProps={{
                    endAdornment: (
                      <InputAdornment variant="filled" position="end">
                        <IconButton
                          aria-label="Toggle password visibility"
                          onClick={this.handleClickShowPassword}
                        >
                          <MsgIcon />
                        </IconButton>
                      </InputAdornment>
                    )
                  }}
                />
              </div>
            </div>
          </div>
        </div>

        <div className="lobby-footer-action">
          <div className="lobby-footer-left">
            <Button variant="contained" className="">
              Exit
            </Button>
          </div>

          <IconButton color="secondary" aria-label="Add an alarm">
            <Icon>alarm</Icon>
          </IconButton>

          <IconButton color="secondary" aria-label="Add an alarm">
            <Icon>alarm</Icon>
          </IconButton>

          <IconButton color="secondary" aria-label="Add an alarm">
            <Icon>alarm</Icon>
          </IconButton>

          <div className="lobby-footer-right">
            <FormControlLabel
              control={<Switch className="" disableRipple checked={true} />}
              label="Ready"
            />
            <Button variant="contained" className="">
              Start
            </Button>
          </div>
        </div>
      </div>
    );
  }
}

function mapStateToProps(state) {
  console.log(state);
  const { player, gamestate } = state;
  return {
    player,
    gamestate
  };
}

function mapDispatchToProps(dispatch) {
  return {
    actions: {
      joinRoom: (lobbyName, player) =>
        dispatch({
          type: "JOIN_ROOM",
          payload: {
            lobbyName,
            player
          }
        }),
      changeRoute: routeName =>
        dispatch({
          type: "CHANGE_ROUTE",
          routeName
        })
    }
  };
}

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Lobby);
