import React, { Component } from "react";
import { connect } from "react-redux";
import "./GameControl.css";
import Hammer from 'react-hammerjs';

class GameControl extends Component {
  constructor(props) {
    super(props);
    this.state = {vertical: 0};
  }

  render() {
    const styles = {
      positions: {
        top: `${this.state.vertical}%`
      }
    };
    const { positions } = styles;

    return (
      <Hammer onPan={handleGameControl.bind(this)}>
        <div className="control-bar" style={positions}>
          <div className="control-handle"/>
          <div className="control-bar-bottom" />
          <div className="control-bar-middle" />
          <div className="control-bar-top" />
        </div>
      </Hammer>
    );
  }
}

function handleGameControl(event) {
  const deltaX = event.deltaX;
  const deltaY = event.deltaY;
  
  console.log('??? ' + this.state.vertical);

  // if () this.getState();
  if (deltaY >=0) {
    this.setState({
      vertical: this.state.vertical + 0.1 
    });
  } else {
    this.setState({
      vertical: this.state.vertical - 0.1 
    });
  }
}

function mapStateToProps(state) {
  const { route } = state;

  return {
    route
  };
}

function mapDispatchToProps(dispatch) {
  return {
    actions: {}
  };
}

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(GameControl);
