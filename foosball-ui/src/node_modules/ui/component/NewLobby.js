import React, { Component } from "react";
import "./NewLobby.css";
import { connect } from "react-redux";

import {
  BrowserRouter as Router,
  Redirect,
  Route,
  Link
} from "react-router-dom";

import TextField from "@material-ui/core/TextField";
import Button from "@material-ui/core/Button";
class NewLobby extends Component {
  constructor(props) {
    super(props);

    this.state = {
      lobbyname: ""
    };
  }

  componentDidMount() {}

  createLobby() {
    const sLobbyName = this.state.lobbyname;
    const oPlayer = this.props.player;
    this.props.actions.joinRoom(sLobbyName, oPlayer);
  }

  handleTextFieldChange(e) {
    this.setState({
      lobbyname: e.target.value
    });
  }

  routeTo(target) {
    this.props.actions.changeRoute(target);
  }

  render() {
    if (this.props.route.name === "home") {
      return <Redirect to="/" />;
    }
    if (this.props.route.name === "lobby") {
      return <Redirect to="/lobby" />;
    }
    
    return (
      <div className="newlobby">
        <div className="newlobby-form">
          <TextField
            label="Name"
            margin="normal"
            value={this.state.lobbyname}
            onChange={this.handleTextFieldChange.bind(this)}
          />
        </div>
        <div className="newlobby-btngroup">
          <Button
            variant="contained"
            color="primary"
            className=""
            onClick={this.createLobby.bind(this)}
          >
            Create
          </Button>
          <Button className="" onClick={this.routeTo.bind(this, "home")}>
            Cancel
          </Button>
        </div>
      </div>
    );
  }
}

function mapStateToProps(state) {
  const { player, route } = state;

  return {
    player,
    route
  };
}

function mapDispatchToProps(dispatch) {
  return {
    actions: {
      joinRoom: (lobbyName, player) =>
        dispatch({
          type: "CREATE_ROOM",
          payload: {
            lobbyName,
            player
          }
        }),
      changeRoute: routeName =>
        dispatch({
          type: "CHANGE_ROUTE",
          routeName
        })
    }
  };
}

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(NewLobby);
