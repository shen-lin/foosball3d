import BABYLON, { Vector3 } from "babylonjs";

class TableModelBuilder {
  TABLE_Y = 0;
  TABLE_WIDTH = 6;
  TABLE_LENGTH = 12;

  constructor(canvas, scene, engine) {
    this.canvas = canvas;
    this.scene = scene;
    this.engine = engine;
  }

  build() {
    this.buildBars();
    this.buildCrossBars();
  }

  buildBars() {
    const bar1 = BABYLON.MeshBuilder.CreateBox(
      "bar1",
      { height: 3 },
      this.scene
    );
    bar1.position.x = -(this.TABLE_LENGTH / 2);
    bar1.position.y = this.TABLE_Y;
    bar1.position.z = -(this.TABLE_WIDTH / 2);

    const bar2 = BABYLON.MeshBuilder.CreateBox(
      "bar2",
      { height: 3 },
      this.scene
    );
    bar2.position.x = this.TABLE_LENGTH / 2;
    bar2.position.y = this.TABLE_Y;
    bar2.position.z = -(this.TABLE_WIDTH / 2);

    const bar3 = BABYLON.MeshBuilder.CreateBox(
      "bar3",
      { height: 3 },
      this.scene
    );
    bar3.position.x = this.TABLE_LENGTH / 2;
    bar3.position.y = this.TABLE_Y;
    bar3.position.z = this.TABLE_WIDTH / 2;

    const bar4 = BABYLON.MeshBuilder.CreateBox(
      "bar4",
      { height: 3 },
      this.scene
    );
    bar4.position.x = -(this.TABLE_LENGTH / 2);
    bar4.position.y = this.TABLE_Y;
    bar4.position.z = this.TABLE_WIDTH / 2;
  }

  buildCrossBars() {
    const crossBar1 = BABYLON.MeshBuilder.CreateCylinder(
      "crossBar1",
      { tessellation: 36 },
      this.scene
    );

    const crossBar2 = BABYLON.MeshBuilder.CreateCylinder(
      "crossBar2",
      { tessellation: 36 },
      this.scene
    );
  }
}

export default TableModelBuilder;
