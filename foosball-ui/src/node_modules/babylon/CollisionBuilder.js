import BABYLON, { Vector3 } from "babylonjs";
import { PhysicsEngine } from "foosball-physics";
import { Player } from "foosball-model";
class CollisionBuilder {
  static addCollisions(scene) {
    CollisionBuilder.addSurfaceBoardCollider(scene);
    CollisionBuilder.addBallCollider(scene);
    CollisionBuilder.addPlayerCollider(scene);
    let physicsEngine = new PhysicsEngine();
    physicsEngine.stop();
    let player = new Player("", "", "", "", true);
    console.log(player);
  }

  static addSurfaceBoardCollider(scene) {
    const surface = scene.getMeshByName("surface");
    surface.physicsImpostor = new BABYLON.PhysicsImpostor(
      surface,
      BABYLON.PhysicsImpostor.PlaneImpostor,
      { mass: 0, friction: 0.2, restitution: 0 },
      scene
    );
  }

  static addBallCollider(scene) {
    const ball = scene.getMeshByName("ball");
    ball.physicsImpostor = new BABYLON.PhysicsImpostor(
      ball,
      BABYLON.PhysicsImpostor.SphereImpostor,
      { mass: 1, friction: 0.2, restitution: 0, collisionResponse: true },
      scene
    );
  }

  static addPlayerCollider(scene) {
    const handle1Player1 = scene.getMeshByName("handle1-player1");
    handle1Player1.physicsImpostor = new BABYLON.PhysicsImpostor(
      handle1Player1,
      BABYLON.PhysicsImpostor.BoxImpostor,
      { mass: 100, ignoreParent: true, friction: 0.2, restitution: 0 },
      scene
    );
  }
}

export default CollisionBuilder;
